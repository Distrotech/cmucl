/* $Header: /Volumes/share2/src/cmucl/cvs2git/cvsroot/src/ldb/Attic/Makefile.orig,v 1.24 1991/09/30 19:11:44 wlott Exp $ */
INCLS = -I.

OBJS = ldb.o egets.o coreparse.o alloc.o monitor.o print.o \
	os.o os-common.o arch.o vars.o assem.o parse.o interrupt.o test.o \
	search.o validate.o gc.o globals.o dynbind.o breakpoint.o \
	regnames.o backtrace.o bitbash.o save.o purify.o socket.o

#ifdef mips
CFLAGS = -O ${INCLS}
UNDEFSYMPATTERN=&
ASSEMFILE='mips-assem.s'
ARCH_SRC="mips-arch.c"
#endif

#ifdef ibmrt
CFLAGS = -g ${INCLS}
UNDEFSYMPATTERN=_&
ASSEMFILE='rt-assem.s'
ARCH_SRC="rt-arch.c"
#endif

#ifdef sparc
CFLAGS = -g ${INCLS}
UNDEFSYMPATTERN=_&
ASSEMFILE='sparc-assem.s'
ARCH_SRC="sparc-arch.c"
#endif

#ifdef MACH
OS_SRC=mach-os.c
OS_LINK_FLAGS=
OS_OBJS=
OS_LIBS=-lmach
CPP=/usr/cs/lib/cpp
#else
#ifdef sun
OS_SRC=sunos-os.c
OS_LINK_FLAGS=-Bstatic
OS_OBJS=fake-mach.o
OS_LIBS=
#endif
CPP=/lib/cpp
#endif

all: ldb.map

ldb.map: ldb
	echo -n 'Map file for ldb version ' > ldb.map
	cat version >> ldb.map
	nm -gp ldb >> ldb.map


ldb: ${OBJS} ${OS_OBJS} version undefineds
	echo -n '1 + ' | cat - version | bc > ,version
	mv ,version version
	cc ${CFLAGS} -DVERSION=`cat version` -c version.c
	cc ${OS_LINK_FLAGS} `cat undefineds` -o ,ldb \
		${OBJS} ${OS_OBJS} version.o \
		${OS_LIBS} -lm -lc
	mv -f ,ldb ldb

version:
	echo 0 > version

undefineds: undefineds.src
	${CPP} undefineds.src | \
	sed -e '/^#/d' -e '/^[ 	]*$$/d' -e 's/.*/-u ${UNDEFSYMPATTERN}/' | \
	sort -u > ,undefineds
	mv ,undefineds undefineds

assem.s:
	rm -f assem.s
	ln -s ${ASSEMFILE} assem.s

os.c:
	rm -f os.c
	ln -s ${OS_SRC} os.c

arch.c:
	rm -f arch.c
	ln -s ${ARCH_SRC} arch.c

#ifdef mips

/* MIPS specific stuff. */

/* If we get an interrupt while in lisp code, the global pointer */
/* is trash.  Therefore, we can't use the GP relative addressing */
/* mode in the interrupt handlers. */

arch.o: arch.c
	cc ${CFLAGS} -G 0 -c arch.c
interrupt.o: interrupt.c
	cc ${CFLAGS} -G 0 -c interrupt.c

assem.o: assem.s lisp.h lispregs.h globals.h
	as -G 0 -o $@ assem.s

#endif

#ifdef ibmrt

assem.o: assem.s
	${CPP} assem.s | as -o assem.o

#endif


#ifdef sparc

/* We need this shit because as runs the wrong preprocessor. */
#ifdef MACH
ASSEMDEFS=-DMACH
#else
ASSEMDEFS=-UMACH
#endif

assem.o: assem.s lisp.h lispregs.h globals.h
	as -P ${ASSEMDEFS} -o $@ assem.s

#endif


socket.o: socket.c
	cc ${CFLAGS} -DUNIXCONN -c socket.c

lisp.h:
	@echo "You must run genesis to create lisp.h!"
	@false

depend: depends

depends:
	rm -f Makefile.orig.BAK
	ln Makefile.orig Makefile.orig.BAK
	sed -n '1,/^\/\*@/p' Makefile.orig > Makefile.orig.NEW
	cc -M ${INCLS} *.c | egrep -v ' /usr/' >> Makefile.orig.NEW
	mv Makefile.orig.NEW Makefile.orig
	rm Makefile.orig.BAK

/*@ Do not edit anything after this line. */
alloc.o: alloc.c
alloc.o: lisp.h
alloc.o: ldb.h
alloc.o: alloc.h
alloc.o: globals.h
alloc.o: lisp.h
arch.o: arch.c
arch.o: ldb.h
arch.o: lisp.h
arch.o: globals.h
arch.o: lisp.h
arch.o: validate.h
arch.o: os.h
arch.o: mach-os.h
arch.o: ldb.h
arch.o: arch.h
arch.o: lispregs.h
arch.o: sparc-lispregs.h
arch.o: signal.h
assem.o: assem.s
assem.o: lispregs.h
assem.o: sparc-lispregs.h
assem.o: lisp.h
assem.o: globals.h
assem.o: lisp.h
backtrace.o: backtrace.c
backtrace.o: ./signal.h
backtrace.o: ldb.h
backtrace.o: lisp.h
backtrace.o: globals.h
backtrace.o: lisp.h
backtrace.o: interrupt.h
backtrace.o: ./signal.h
backtrace.o: lispregs.h
backtrace.o: sparc-lispregs.h
bitbash.o: bitbash.c
breakpoint.o: breakpoint.c
breakpoint.o: ./signal.h
breakpoint.o: ldb.h
breakpoint.o: lisp.h
breakpoint.o: os.h
breakpoint.o: mach-os.h
breakpoint.o: ldb.h
breakpoint.o: lispregs.h
breakpoint.o: sparc-lispregs.h
breakpoint.o: globals.h
breakpoint.o: lisp.h
coreparse.o: coreparse.c
coreparse.o: ldb.h
coreparse.o: os.h
coreparse.o: mach-os.h
coreparse.o: ldb.h
coreparse.o: lisp.h
coreparse.o: globals.h
coreparse.o: lisp.h
coreparse.o: core.h
dynbind.o: dynbind.c
dynbind.o: ldb.h
dynbind.o: lisp.h
dynbind.o: globals.h
dynbind.o: lisp.h
egets.o: egets.c
egets.o: ./signal.h
fake-mach.o: fake-mach.c
fake-mach.o: ldb.h
fake-mach.o: os.h
fake-mach.o: mach-os.h
fake-mach.o: ldb.h
gc.o: gc.c
gc.o: ./signal.h
gc.o: lisp.h
gc.o: ldb.h
gc.o: os.h
gc.o: mach-os.h
gc.o: ldb.h
gc.o: gc.h
gc.o: lisp.h
gc.o: globals.h
gc.o: lisp.h
gc.o: interrupt.h
gc.o: ./signal.h
gc.o: validate.h
gc.o: lispregs.h
gc.o: sparc-lispregs.h
globals.o: globals.c
globals.o: lisp.h
globals.o: ldb.h
globals.o: globals.h
globals.o: lisp.h
interrupt.o: interrupt.c
interrupt.o: ./signal.h
interrupt.o: ldb.h
interrupt.o: os.h
interrupt.o: mach-os.h
interrupt.o: ldb.h
interrupt.o: arch.h
interrupt.o: lisp.h
interrupt.o: globals.h
interrupt.o: lisp.h
interrupt.o: lispregs.h
interrupt.o: sparc-lispregs.h
interrupt.o: interrupt.h
interrupt.o: ./signal.h
interrupt.o: validate.h
ldb.o: ldb.c
ldb.o: ldb.h
ldb.o: lisp.h
ldb.o: alloc.h
ldb.o: vars.h
ldb.o: globals.h
ldb.o: lisp.h
mach-os.o: mach-os.c
mach-os.o: ./signal.h
mach-os.o: ldb.h
mach-os.o: os.h
mach-os.o: mach-os.h
mach-os.o: ldb.h
mips-arch.o: mips-arch.c
mips-arch.o: ldb.h
mips-arch.o: lisp.h
mips-arch.o: globals.h
mips-arch.o: lisp.h
mips-arch.o: validate.h
mips-arch.o: os.h
mips-arch.o: mach-os.h
mips-arch.o: ldb.h
mips-arch.o: arch.h
mips-arch.o: lispregs.h
mips-arch.o: sparc-lispregs.h
mips-arch.o: signal.h
mips-assem.o: mips-assem.s
mips-assem.o: lisp.h
mips-assem.o: lispregs.h
mips-assem.o: sparc-lispregs.h
mips-assem.o: globals.h
mips-assem.o: lisp.h
monitor.o: monitor.c
monitor.o: ./signal.h
monitor.o: ldb.h
monitor.o: lisp.h
monitor.o: globals.h
monitor.o: lisp.h
monitor.o: vars.h
monitor.o: parse.h
monitor.o: interrupt.h
monitor.o: ./signal.h
monitor.o: lispregs.h
monitor.o: sparc-lispregs.h
os-common.o: os-common.c
os-common.o: ldb.h
os-common.o: os.h
os-common.o: mach-os.h
os-common.o: ldb.h
os.o: os.c
os.o: ./signal.h
os.o: ldb.h
os.o: os.h
os.o: mach-os.h
os.o: ldb.h
pager.o: pager.c
pager.o: pager.h
pagerlog.o: pagerlog.c
parse.o: parse.c
parse.o: ./signal.h
parse.o: ldb.h
parse.o: lisp.h
parse.o: globals.h
parse.o: lisp.h
parse.o: vars.h
parse.o: parse.h
parse.o: interrupt.h
parse.o: ./signal.h
parse.o: lispregs.h
parse.o: sparc-lispregs.h
print.o: print.c
print.o: ldb.h
print.o: print.h
print.o: lisp.h
print.o: vars.h
purify.o: purify.c
purify.o: lisp.h
purify.o: ldb.h
purify.o: os.h
purify.o: mach-os.h
purify.o: ldb.h
purify.o: globals.h
purify.o: lisp.h
purify.o: validate.h
purify.o: interrupt.h
purify.o: ./signal.h
purify.o: gc.h
purify.o: lisp.h
regnames.o: regnames.c
regnames.o: lispregs.h
regnames.o: sparc-lispregs.h
rt-arch.o: rt-arch.c
rt-arch.o: ldb.h
rt-arch.o: lisp.h
rt-arch.o: globals.h
rt-arch.o: lisp.h
rt-arch.o: validate.h
rt-arch.o: os.h
rt-arch.o: mach-os.h
rt-arch.o: ldb.h
rt-arch.o: arch.h
rt-arch.o: lispregs.h
rt-arch.o: sparc-lispregs.h
rt-arch.o: signal.h
rt-assem.o: rt-assem.s
rt-assem.o: lispregs.h
rt-assem.o: sparc-lispregs.h
rt-assem.o: lisp.h
rt-assem.o: globals.h
rt-assem.o: lisp.h
save.o: save.c
save.o: ./signal.h
save.o: ldb.h
save.o: os.h
save.o: mach-os.h
save.o: ldb.h
save.o: lisp.h
save.o: core.h
save.o: globals.h
save.o: lisp.h
save.o: lispregs.h
save.o: sparc-lispregs.h
search.o: search.c
search.o: lisp.h
search.o: ldb.h
socket.o: socket.c
sparc-arch.o: sparc-arch.c
sparc-arch.o: ldb.h
sparc-arch.o: lisp.h
sparc-arch.o: globals.h
sparc-arch.o: lisp.h
sparc-arch.o: validate.h
sparc-arch.o: os.h
sparc-arch.o: mach-os.h
sparc-arch.o: ldb.h
sparc-arch.o: arch.h
sparc-arch.o: lispregs.h
sparc-arch.o: sparc-lispregs.h
sparc-arch.o: signal.h
sparc-assem.o: sparc-assem.s
sparc-assem.o: lispregs.h
sparc-assem.o: sparc-lispregs.h
sparc-assem.o: lisp.h
sparc-assem.o: globals.h
sparc-assem.o: lisp.h
sunos-os.o: sunos-os.c
sunos-os.o: ./signal.h
sunos-os.o: ldb.h
sunos-os.o: os.h
sunos-os.o: mach-os.h
sunos-os.o: ldb.h
test.o: test.c
test.o: ./signal.h
test.o: lisp.h
test.o: ldb.h
validate.o: validate.c
validate.o: ldb.h
validate.o: lisp.h
validate.o: os.h
validate.o: mach-os.h
validate.o: ldb.h
validate.o: globals.h
validate.o: lisp.h
validate.o: validate.h
vars.o: vars.c
vars.o: ldb.h
vars.o: lisp.h
vars.o: vars.h
version.o: version.c
