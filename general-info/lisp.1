.\" -*- Mode: Text -*-
.\"
.\" **********************************************************************
.\" This code was written as part of the CMU Common Lisp project at
.\" Carnegie Mellon University, and has been placed in the public domain.
.\" If you want to use this code or any part of CMU Common Lisp, please contact
.\" Scott Fahlman or slisp-group@cs.cmu.edu.
.\"
.\"$Header: /Volumes/share2/src/cmucl/cvs2git/cvsroot/src/general-info/lisp.1,v 1.1 1991/10/16 15:52:07 ram Exp $
.\"
.\" **********************************************************************
.\"
.\" Man page for CMU CL.

.TH LISP 1 "October 15, 1991"
.AT 3
.SH NAME
lisp \- CMU Common Lisp programming environment
.SH SYNOPSIS
.B lisp
[input-files] [switch-list]
.SH DESCRIPTION
.I lisp
Starts up CMU Common Lisp.  If
.I switch-list
is empty, then Lisp will enter a read-eval-print loop using stdin, stdout and
stderr.  The optional 
.I input-files
provide operands for some switches.  These switches are defined:

.TP 10n
.BR \-core " filename"
Specifies the suspended Lisp image (or `core file') to start up.  The default
is `lib/lisp.core'.
.TP
.BR \-edit
Causes Lisp to enter the 
.I Hemlock
editor.
A file to edit may be specified by
placing the name of the file between the program name (usually `lisp') and
the first switch.
.TP
.BR \-eval " expression"
Evaluates the specified Lisp
.I expression
during the start up sequence.  The value of the form will not be printed unless
it is wrapped in a form that does output.
.TP
.BR \-init " filename"
Specifies the name of a file containing user customizations that is to be
loaded each time Lisp starts up (default ~/init or ~/.cmucl-init.)  The loader
loads any existing compiled binary, or the ".lisp" source if none.
.TP
.BR \-hinit " filename"
Similar to \-init, but specifies the name of the
.I Hemlock
init file (default `~/hemlock-init'), which is loaded only when
.I Hemlock
is started.
.TP
.BR \-noinit
Suppresses loading of the init file, and also prevents \-edit from loading the
.I Hemlock
init file.
.TP
.BR \-load " filename"
Loads the specified file into Lisp before entering Lisp's read-eval-print loop.
.TP
.BR \-slave " editor-name"
Specifies that Lisp should start up as a 
.I slave
Lisp and try to
connect to an editor Lisp.  The name of the editor to connect to must be
specified.  To find the editor's name, use the
.I Hemlock
`Accept Slave Connections' command.  
.I editor-name
is of the form `machine-name:socket', where
.I machine-name 
is the
internet host name for the machine and
.I socket
is the decimal number of the socket to connect to.
.PP

.SH ENVIRONMENT

.TP 10n
.BR CMUCLLIB
This variable points to the `lib/' directory holding `lisp.core' and other
files used by Lisp at run-time.  The default is `/usr/misc/.cmucl/lib'.
.TP
.BR CMUCL_EMPTYFILE
If `/tmp' is a "tmpfs" filesystem, then you must setenv CMUCL_EMPTYFILE to a
pathname that can be used instead of `/tmp/empty'.
.PP

.SH FILES

The following pathnames are specified relative to the directory where CMU CL is
installed.

.TP 10n
.BR doc/*
Various postscript and text documentation files.
.TP
.BR bin/lisp
The lisp startup program.  This directory should be in PATH.
.TP
.BR lib/lisp.core
The suspended Lisp image.
.TP
.BR lib/site-init.lisp
Site specific initialization (see README file.)
.TP
.BR lib/hemlock11.*, lib/mh-scan, lib/spell-dictionary.bin
Hemlock files.
.TP
.BR lib/inspect*
Inspector files.
.TP
.BR lib/fonts/ 
X11 fonts for Hemlock and the inspector.
.TP
.BR lib/load-foreign.csh
Script used by LOAD-FOREIGN to run "ld".
.TP
.BR ~/init.lisp,~/.cmucl-init.lisp
User customization files loaded at lisp startup; either name is acceptable.
Init files can be compiled.
.TP
.BR ~/hemlock-init.lisp
Hemlock initialization file, loaded when Hemlock starts.
.PP

.SH SEE ALSO
cmucl(1), README
.br
The ``CMU Common Lisp User's Manual'',
.br
the ``Hemlock User's Manual'', and 
.br
the ``Hemlock Command Implementor's Manual''

.SH BUGS

Bug reports should be sent to cmucl-bugs@cs.cmu.edu.  Please consult
your local CMU CL maintainer or Common Lisp expert to verify that 
the problem really is a bug before sending to this list.

Known problems with this version:
.TP 3
--
Detection of stack overflow is not very graceful.   You get many "map
failure" errors on stderr.
.TP 3
--
If file descriptors are used up, then Lisp will die.  The garbage collector
does
.I not
close garbage streams.
.TP 3
\--
Several proposed ANSI Common Lisp (CLtL II) features are not implemented:
MAKE-LOAD-FORM and LOAD-TIME-EVAL, any CLOS features not implemented by PCL,
Pathname enhancements (wildcards and logical pathnames.)
.TP 3
\--
The interpreter's pre-processing freezes in the macro definitions in effect at
the time an interpreted function is defined.
.PP
