========================== C M U C L  19 b =============================

[--- WORK IN PROGRESS --- DO NOT DISTRIBUTE ---]

The CMUCL project is pleased to announce the release of CMUCL 19b.
This is a major release which contains numerous enhancements and
bugfixes from the 19a release.

CMUCL is a free, high performance implementation of the Common Lisp
programming language which runs on most major Unix platforms. It
mainly conforms to the ANSI Common Lisp standard. CMUCL provides a
sophisticated native code compiler; a powerful foreign function
interface; an implementation of CLOS, the Common Lisp Object System,
which includes multimethods and a metaobject protocol; a source-level
debugger and code profiler; and an Emacs-like editor implemented in
Common Lisp. CMUCL is maintained by a team of volunteers collaborating
over the Internet, and is mostly in the public domain.

New in this release:
       
  * Feature enhancements:
      - Added a much faster and much less consy bignum printer and a
        faster bignum reader.
      - Extended REQUIRE to support *MODULE-PROVIDER-FUNCTIONS* from
        SBCL.
      - NetBSD supported.
      - SIMPLE-STREAM fixes:
           o READ-SEQUENCE and WRITE-SEQUENCE for
             signed-byte/unsigned-byte 8 streams.
	   o Memory-mapped file streams.
      - Large file support for Solaris, so CMUCL can handle files
        larger than 2GB.
      - Support for Mac OS X.
      - A much faster GCD implementation.
      - A faster Karatsuba multiplier when the number of words of the
        bignums is not a power of 2.  (Break-even is still around 1500
        bits, though.)
      - New command-line switch -debug-lisp-search to show how lisp is
        searching for its core file.
      - DEBUG-RETURN implemented which allows you to return a value
        from function.  Only enabled with DEBUG 3.
      - Lazy sxhash on symbols implemented for ppc.
      - Pretty-printer for LOOP.
      - Added some more pprinters for various forms.
      - Callbacks supported on Mac OS X.
      - Loop analysis code added to the compiler.  It's incorporated
        into the build and can be enabled by setting *loop-analyze* to
        T, but the compiler doesn't use the loop information for
        anything yet.
      - Errors from socket functions signal a SOCKET-ERROR instead of
        ERROR. 
      - Efficiency notes are no longer printed if inhibit-warnings >=
         2.5.
      - Simple support for datagram networking added: INET-RECVFROM,
        INET-SENDTO, INET-SHUTDOWN.
      - Linkage table support for PPC and Darwin.
      - A socket reset signals a SOCKET-ERROR condition instead of a
        general ERROR condition.

  * Numerous ANSI compliance fixes:
      - FILE-AUTHOR should signal errors appropriately.
      - CMUCL was computing the wrong value for some special functions
        when the argument was on the branch cut for the function.
      - MULTIPLE-VALUE-BIND accepts &REST and friends in the var list.
      - When constructing logical pathnames, all components will be
        automatically upcased.  Needed for print/read consistency, and
        fixes an issue with ASDF and logical pathnames.
      - Numerous fixes to the float printer, including a new float
        printer.
      - Justification (~< ~>) works better.
      - ~V with the value of NIL in format strings is treated to mean
        as if it weren't given at all, as specified by ANSI CL.
      - Characters print consistently with ~:C and ~S.
      - Numerous bug fixes for pretty-printing and format strings.
      - Pathnames are now printed with #P instead of #p.
      - The types COMPLEX and (COMPLEX REAL) are the same now.
      - UPGRADED-COMPLEX-PART-TYPE returns RATIONAL for integer types
        now.  (CMUCL doesn't really have a (COMPLEX INTEGER) type).
      - When a pathname can't be printed readably, signal a
        PRINT-NOT-READABLE condition
      - Printing arrays readably was sometimes wrong.
      - FOR-AS-ON-LIST works with dotted lists.
      - DEFSTRUCT predicates for list structures don't produce errors
        anymore on dotted or short lists.
      - UNBOUND-SLOT condition no longer takes the :slot keyword.  It
        uses the ANSI-specified :name keyword.  This is not backward
        compatible!
      - MAKE-SYMBOL takes STRING's, not just SIMPLE-STRING's.
      - PPRINT-POP did not return NIL when the list arg to
        PPRINT-LOGICAL-BLOCK was NIL.
      - Signal appropriate error conditions instead of a plain error
        condition in many situations.
      - TYPECASE was treating the type T as an otherwise clause even
        though it was not the last clause.  It should be just a
        regular clause.
      - ASIN, ACOS, ACOSH, and ATANH were returning the wrong values
        when the arg was a real number on the branch cut.
      - Missed some places where loop variables were duplicated, which
        should signal a program-error.
      - LOOP INITIALLY clauses occur after variable initialization for
        FOR, WITH, and AS clauses, as required by ANSI CL.
      - Format bugs in ~{ and ~@[X~], as noted by ansi-tests, have
        been fixed.
      - Evaluation order of REMF, INCF, and DECF.
      - When *read-suppress* is T, READ, READ-PRESERVING-WHITESPACE,
        READ-DELIMITED-LIST, and READ-FROM-STRING now return NIL, as
        specified by ANSI CL.  (Previously, CMUCL would return a list
        of NILs.)
      - Pathname components of type :UNSPECIFIC are not printed in
        namestrings anymore.

  * Numerous bugfixes:
      - FFLOOR and friends preserve the sign of the arg, so -0.0 is
        returned for negative args.
      - EXPT sometimes returne NaN instead of 1 when the power was 0.
      - Weak pointers don't have O(n^2) GC behavior anymore.
      - X11 authorization changes to solve problems seen with servers
        that don't listen to TCP connection requests.
      - unix-read fix
      - The compiler would give an error on deriving the result type
        of RANDOM when the arg to RANDOM was a union type.
      - "~*~" was not being parsed to mean a wildcard version.
      - UNIX-GETPWUID implemented for Darwin.  Needed for FILE-AUTHOR.
      - The compiler no longer gives errors when deriving the result type of
        coerce when converting a integer to a float that would not fit
        in a float.
      - Fix bug in reading from streams with element-type SIGNED-BYTE
        for sizes greater than 32:  Positive numbers were incorrectly
        being returned as negative.
      - REMOVE-DUPLICATES was not honoring the :START option.
      - PPRINT-LOGICAL-BLOCK sometimes didn't close the block properly
        because PPRINT-EXIT-IF-LIST-EXHAUSTED caused an early exit.
      - Macro expansion was not looking in the local environment
        properly for local definitions.
      - Circular Weak pointers can now be printed when *print-circle*
        is T.
      - "foo.lisp.*" is interpreted to have version :wild, just like
        "foo.lisp.~*~". 
      - DIRECTORY will report all versions of a file if the pathname
        has version :wild.
      - Fixed bug with CLX on MacOS X where the WM-SIZE-HINTS were
        larger than CLX expected.  Replaced card16 with card32.
      - Callbacks on sparc that returned double-floats were sometimes
        causing a sigbus error.
      - Type specifiers like (float low high) where low and high were
        outside the range of single-float numbers no longer cause
        compiler errors.
      - Fix source-form reporting in the disassembler.
      - Arrays in fasl files had non-NIL fill-pointer.  Make them NIL.
      - FILE-POSITION was incorrectly set for simple-streams after a
        READ-VECTOR. 
      - Printing 1d23 no longer causes an error.
      - Work around the problem of (concatenate 'fixnum '(1)) causing
        deletion of all following code.
      - A directory with a component of :WILD was not correctly
        handled.
      - CREATE-INET-LISTENER was missing a call to htonl.
      - (coerce #c(1 2) '(complex float)) works now.
      - Type derivation for logior and logxor was broken.
      - Fixed bug where (setf (aref f 0) (aref d 0)) doesn't produce a
        warning and causes code including the function return to be
        deleted, where f is a single-float array and d is a
        double-float array.
      - COUNT for bit arrays was sometimes failing to include the
        count from the last 32-bits of the array.
      - The default heap size was causing CMUCL to fail on Solaris
        10.  Change the default so this doesn't happen.  (The real
        cause is unknown.)

  * Other changes:
      - Infinite loops in map and friends caused by specifying
        sequence types that are too hairy for CMUCL should no longer
        occur.  But CMUCL will now signal an error, which may not be
        compliant either.
      - Compiler is a little smarter in deriving the result type of
        MAP.
      - MAKE-PATHNAME will accept a :HOST arg of NIL, and will use NIL
        as the host slot instead of filling in the host slot from the
        defaults.

  * Improvements to the PCL implementation of CLOS:
      - AMOP-style custom slot allocation supported.

  * Improvements to Hemlock, the Emacs-like editor:

  * Changes to rebuilding procedure:

  * Deprecated features:

This release is not binary compatible with code compiled using CMUCL
19a; you will need to recompile FASL files. 

See <URL:http://www.cons.org/cmucl/> for download information,
guidelines on reporting bugs, and mailing list details.


We hope you enjoy using this release of CMUCL!

