========================== C M U C L  20 a =============================

[--- WORK IN PROGRESS ---]

The CMUCL project is pleased to announce the release of CMUCL 20a.
This is a major release which contains numerous enhancements and
bugfixes from the 19f release.

CMUCL is a free, high performance implementation of the Common Lisp
programming language which runs on most major Unix platforms. It
mainly conforms to the ANSI Common Lisp standard. CMUCL provides a
sophisticated native code compiler; a powerful foreign function
interface; an implementation of CLOS, the Common Lisp Object System,
which includes multimethods and a metaobject protocol; a source-level
debugger and code profiler; and an Emacs-like editor implemented in
Common Lisp. CMUCL is maintained by a team of volunteers collaborating
over the Internet, and is mostly in the public domain.

New in this release:


  * Feature enhancements:
    - Support for Unicode has been added.  You have Unicode support if
      *FEATURES* includes :UNICODE.
      o CHAR-CODE-LIMIT is 65536.  
      o There is only one character type;  CHARACTER and BASE-CHAR are
        the same types.
      o There is only one string type; STRING and BASE-STRING are the
        same type. All strings are UTF-16 strings and therefore
        contain UTF-16 surrogate pairs.  While most string functions
        correctly handle surrogate pairs, not all do.  It is up to the
        user to handle this.  In particular, processing of strings on
        a character-by-character basis will need to handle surrogate
        pairs. 
      o External formats are supported.  Functions that need to know
        the external format take an :EXTERNAL-FORMAT keyword argument
        to specify the format.
        + The special variable STREAM:*DEFAULT-EXTERNAL-FORMAT*
          specifies the default format to be used for all streams.
          Setting this to a new value will change the external format
          for all streams to use the new format.  This includes
          *STANDARD-INPUT* and friends.
        + Many external formats are supported.  The complete list is
          in aliases, but we support at least :ISO-8859-1, :UTF-8,
          :UTF-16, :UTF-32, :CRLF.
       o CHAR-LESSP and friends perform case-folding by converting to
         lowercase.  (The non-Unicode version converted to uppercase.)
       o STRING<, STRING>, and friends compare strings in codepoint order.
       o STRING-LESSP, STRING-GREATERP, and friends compare strings in
         codepoint order after doing a case-folding operation on each
         codepoint.  The case-folding operation converts each
         codepoint to the corresponding lowercase codepoint.
         

  * ANSI compliance fixes:

  * Bugfixes:
    - CMUCL sometimes gets "stuck" during compilation where it is
      trying to simplify the union of a large number of disjoint
      numeric types.  Previously, we handled the case of integer
      types.  Extend this to handle floats as well.
    - SXHASH was computing the same hash code for upper and lower case
      characters by upcasing the character.  This isn't necessary
      since the characters are not EQUAL, so make SXHASH return
      different values for upper and lower case letter.
    - WRITE-VECTOR was not writing out enough data when no
      byte-swapping is needed and the end index was not given.
      (Confusion about the length of the vector versus the index as an
      octet count, not element count.)

  * Trac Tickets:
    #31: pathname bug with :case :common
    Fixed.  The common case is applied to each part of the directory,
    not to the directory as a whole.

  * Other changes:
    - SOFTWARE-VERSION may return different results than previously.
      UNIX:UNIX-UNAME is now used to obtain the software version on
      Linux and Solaris.

  * Improvements to the PCL implementation of CLOS:

  * Changes to building procedure:

This release is not binary compatible with code compiled using CMUCL
19f; you will need to recompile FASL files. 

See <URL:http://www.cons.org/cmucl/> for download information,
guidelines on reporting bugs, and mailing list details.


We hope you enjoy using this release of CMUCL!

